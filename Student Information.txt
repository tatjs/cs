from IPython.lib.display import isdir
print("-----Program for Student Information-----")
D = dict()
n = int(input('How many student record you want to store??'))
id=1

for i in range(0,n):
  x, y = input("Enter the complete name (First and last name) of student: ").split()
  z = input("Enter contact number: ")
  m = input('Enter Marks: ')
  D[id] = (x,y,z, m)
  id+=1
print(D)
def sort():
  ls = list()
  for id,details in D.items():
    tup = (details)
    print(tup)
    ls.append(tup)
  ls = sorted(ls)
  for i in ls:
   print(i[0],i[1])
  return

def minmarks():
  ls = list()
  for id,details in D.items():
    ls.append(details[3])
  ls = sorted(ls)
  print("Minimum marks: ", min(ls))

  return

def searchdetail(n):
  for id,details in D.items():
    if(int(id)==n):
      print(id,details)
      break
  
  return

def fallback():
  print("Error!!!Please provide proper input!!")

def option():
  choice = input('''Enter the operation detail: \n \
  1: Sorting using first name \n \
  2: Finding Minimum marks \n \
  3: Search contact number using id: \n \
  4: Exit\n \
  Option: ''')
  if int(choice) == 1:
    sort()
    print('Want to perform some other operation??? Y or N: ')
    inp=input()
    if(inp == 'Y'or inp=='y'):

      option()
    elif(inp=='N' or inp=='n'):
      exit()
    else:
      fallback()
    exit()
  elif int(choice) == 2:
    minmarks()
    print('Want to perform some other operation??? Y or N: ')
    inp = input()
    if(inp == 'Y'or inp=='y'):

      option()
    elif(inp=='N' or inp=='n'):
      exit()
    else:
      fallback()
    exit()
    
  elif int(choice) == 3:
    id = int(input('Enter id of student: '))
    searchdetail(id)
    print('Want to perform some other operation??? Y or N: ')
    inp = input()
    if(inp == 'Y'or inp=='y'):

      option()
    elif(inp=='N' or inp=='n'):
      exit()
    else:
      fallback()
    exit()
  elif int(choice)==4:
    print('Thanks for executing me!!!!')
    exit()
  else:
    fallback()

option()